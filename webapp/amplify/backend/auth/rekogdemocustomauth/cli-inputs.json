{
  "version": "1",
  "cognitoConfig": {
    "identityPoolName": "rekogdemo",
    "allowUnauthenticatedIdentities": false,
    "resourceNameTruncated": "rekogd688c363a",
    "userPoolName": "rekogdemo",
    "autoVerifiedAttributes": [
      "email"
    ],
    "mfaConfiguration": "OFF",
    "mfaTypes": [
      "SMS Text Message"
    ],
    "smsAuthenticationMessage": "Your authentication code is {####}",
    "smsVerificationMessage": "Your verification code is {####}",
    "emailVerificationSubject": "Your verification code",
    "emailVerificationMessage": "Your verification code is {####}",
    "defaultPasswordPolicy": false,
    "passwordPolicyMinLength": 8,
    "passwordPolicyCharacters": [],
    "requiredAttributes": [
      "email",
      "family_name",
      "given_name"
    ],
    "aliasAttributes": [],
    "userpoolClientGenerateSecret": false,
    "userpoolClientRefreshTokenValidity": 30,
    "userpoolClientWriteAttributes": [
      "address",
      "birthdate",
      "middle_name",
      "gender",
      "locale",
      "name",
      "nickname",
      "phone_number",
      "preferred_username",
      "picture",
      "profile",
      "updated_at",
      "website",
      "zoneinfo",
      "email",
      "family_name",
      "given_name"
    ],
    "userpoolClientReadAttributes": [
      "address",
      "birthdate",
      "email",
      "family_name",
      "middle_name",
      "gender",
      "locale",
      "given_name",
      "name",
      "nickname",
      "phone_number",
      "preferred_username",
      "picture",
      "profile",
      "updated_at",
      "website",
      "zoneinfo",
      "email_verified",
      "phone_number_verified"
    ],
    "userpoolClientLambdaRole": "rekogd688c363a_userpoolclient_lambda_role",
    "userpoolClientSetAttributes": true,
    "sharedId": "688c363a",
    "resourceName": "rekogdemocustomauth",
    "authSelections": "identityPoolAndUserPool",
    "useDefault": "manual",
    "thirdPartyAuth": false,
    "usernameAttributes": [
      "email"
    ],
    "userPoolGroups": true,
    "adminQueries": true,
    "triggers": {
      "CreateAuthChallenge": [
        "boilerplate-create-challenge"
      ],
      "DefineAuthChallenge": [
        "boilerplate-define-challenge"
      ],
      "PostConfirmation": [
        "custom"
      ],
      "VerifyAuthChallengeResponse": [
        "boilerplate-verify"
      ]
    },
    "hostedUI": false,
    "userPoolGroupList": [
      "admin",
      "poweruser",
      "viewer"
    ],
    "adminQueryGroup": "admin",
    "serviceName": "Cognito",
    "usernameCaseSensitive": false,
    "useEnabledMfas": true,
    "authRoleArn": {
      "Fn::GetAtt": [
        "AuthRole",
        "Arn"
      ]
    },
    "unauthRoleArn": {
      "Fn::GetAtt": [
        "UnauthRole",
        "Arn"
      ]
    },
    "breakCircularDependency": true,
    "dependsOn": [
      {
        "category": "function",
        "resourceName": "rekogdemocustomauthCreateAuthChallenge",
        "triggerProvider": "Cognito",
        "attributes": [
          "Arn",
          "Name"
        ]
      },
      {
        "category": "function",
        "resourceName": "rekogdemocustomauthDefineAuthChallenge",
        "triggerProvider": "Cognito",
        "attributes": [
          "Arn",
          "Name"
        ]
      },
      {
        "category": "function",
        "resourceName": "rekogdemocustomauthPostConfirmation",
        "triggerProvider": "Cognito",
        "attributes": [
          "Arn",
          "Name"
        ]
      },
      {
        "category": "function",
        "resourceName": "rekogdemocustomauthVerifyAuthChallengeResponse",
        "triggerProvider": "Cognito",
        "attributes": [
          "Arn",
          "Name"
        ]
      }
    ],
    "permissions": [],
    "authTriggerConnections": "[\n  {\n    \"triggerType\": \"CreateAuthChallenge\",\n    \"lambdaFunctionName\": \"rekogdemocustomauthCreateAuthChallenge\"\n  },\n  {\n    \"triggerType\": \"DefineAuthChallenge\",\n    \"lambdaFunctionName\": \"rekogdemocustomauthDefineAuthChallenge\"\n  },\n  {\n    \"triggerType\": \"PostConfirmation\",\n    \"lambdaFunctionName\": \"rekogdemocustomauthPostConfirmation\"\n  },\n  {\n    \"triggerType\": \"VerifyAuthChallengeResponse\",\n    \"lambdaFunctionName\": \"rekogdemocustomauthVerifyAuthChallengeResponse\"\n  }\n]",
    "parentStack": {
      "Ref": "AWS::StackId"
    }
  }
}